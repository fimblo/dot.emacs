#+TITLE:      My Emacs setup
#+AUTHOR:     Mattias Jansson (fimblo)
#+EMAIL:      fimblo@yanson.org

* Initial setup
** Set up basic environment

   Before we can go about fixing the fun parts of emacs, we'll need to
   set up some basics.

#+BEGIN_SRC emacs-lisp
(require 'cl)
(setq message-log-max (- (expt 2 15) 1))

(defvar home (getenv "HOME") "Home directory, sourced from Environment variable HOME")
(setq default-directory (concat home "/"))

(defvar hostname (getenv "HOSTNAME") "This machine's hostname")

(setenv "PATH" (concat (getenv "PATH") ":/usr/local/bin"))
(setq exec-path (append exec-path '("/usr/local/bin")))

(setq locale-coding-system	'utf-8)
(set-terminal-coding-system	'utf-8)
(set-keyboard-coding-system	'utf-8)
(set-selection-coding-system	'utf-8)
(prefer-coding-system		'utf-8)
(set-language-environment       "UTF-8")
#+END_SRC

** Package.el configuration
   This needs to be in place before any configurations of installed packages.

   Most of this was shamelessly copied from @jeekl's [[https://github.com/jeekl/dotfiles/blob/master/emacs.d/emacs.org][emacs setup]]. Thanks @jeekl!
#+BEGIN_SRC emacs-lisp

;; mkdir these and add them to load path
(dolist (path '(  "~/.emacs.d/elpa/"
		  "~/.emacs.d/el-get/"
		  "~/.emacs.d/vendor/"))
  (make-directory path t)
  (let ((default-directory path))
    (normal-top-level-add-subdirs-to-load-path)))

(require 'package)

;; add these sources
(eval-after-load "package"
  '(progn
     (add-to-list 'package-archives '("org"	  . "http://orgmode.org/elpa/"))
     (add-to-list 'package-archives '("melpa"	  . "http://melpa.milkbox.net/packages/"))
     (add-to-list 'package-archives '("elpa"	  . "http://elpa.gnu.org/packages/"))
     (add-to-list 'package-archives '("marmalade" . "http://marmalade-repo.org/packages/"))
     (add-to-list 'package-archives '("tromey"	  . "http://tromey.com/elpa/"))
))

(setq url-http-attempt-keepalives nil)	; A package.el bug. Apparently.

(defvar elpa-packages
  '(
    adoc-mode
    apache-mode
    color-theme
    color-theme-approximate
    column-marker
    edit-server
    gmail-message-mode
    graphviz-dot-mode
    highlight-tail
    htmlize
    mediawiki
    mpg123
    muttrc-mode
    org-bullets
    puppet-mode
    rainbow-mode
    ssh-config-mode
    twittering-mode
    yaml-mode
    json-mode
    )
  "These packages are installed if necessary."
  )

(if (not package-archive-contents)
    (package-refresh-contents))

(dolist (pkg elpa-packages)
  (when (and (not (package-installed-p pkg))
           (assoc pkg package-archive-contents))
    (package-install pkg)))

    
(defun package-list-unaccounted-packages ()
  "Like `package-list-packages', but shows only the packages that
  are installed and are not in `elpa-packages'.  Useful for
  cleaning out unwanted packages."
  (interactive)
  (package-show-package-list
   (remove-if-not (lambda (x) (and (not (memq x elpa-packages))
				   (not (package-built-in-p x))
				   (package-installed-p x)))
                  (mapcar 'car package-archive-contents))))

#+END_SRC

** Auto-customization

   Move all customization stuff to another file

#+BEGIN_SRC emacs-lisp
(setq custom-file "~/.emacs.d/custom.el")
(load custom-file 'noerror)
#+END_SRC
* UI
  This is the first round of setting up the UI.

#+BEGIN_SRC emacs-lisp
(setq default-major-mode 'org-mode)   ; default mode is org-mode

(setq fci-rule-column 80)             ; fill column
(setq inhibit-startup-message t)      ; no startup message
(setq line-number-mode t)             ; show line number
(setq column-number-mode t)           ; show current column
(setq indicate-buffer-boundaries t)   ; visually show end of buffer
(global-font-lock-mode 1)             ; syntax highlightning ON
(setq transient-mark-mode t)          ; turn on transient-mark-mode
(setq next-line-add-newlines t)       ; C-n at eob opens new lines.
(setq-default indicate-empty-lines t) ; be even more obvious about it

(setq compilation-ask-about-save 0)   ; dont ask to save when compiling
(setq remove-help-window t)           ; kill completion-window when leaving minibuffer
(setq insert-default-directory t)     ; get default dir in commands
(setq enable-local-variables t)       ; enables local variables...
(setq compilation-window-height 10)   ; height of compilation window.
(setq default-cursor-type 'bar)       ; make cursor thin
(setq case-fold-search t)             ; ignore case in searches
(setq apropos-do-all t)               ; show all funcs/vars

(xterm-mouse-mode t)                  ; Support mouse in xterms
(setq mouse-wheel-mode t)             ; support mouse wheel
(setq mouse-wheel-follow-mouse t)     ; scrolls mouse pointer position, not pointer


(tool-bar-mode -1)
(menu-bar-mode -1)
(if (boundp 'fringe-mode)     (fringe-mode -1))
(if (boundp 'scroll-bar-mode) (scroll-bar-mode -1))

;; text-modes can use Iosevka. fix later.
;;(set-face-attribute 'default nil :family "Iosevka" :height 130)
;;(set-face-attribute 'fixed-pitch nil :family "Iosevka")
;;(set-face-attribute 'variable-pitch nil :family "Baskerville")

(set-face-foreground 'default "grey90")
(set-face-background 'default "grey20")
(set-face-background 'region "grey30")



#+END_SRC

#+RESULTS:

* Org-mode
** Org-babel 
  I'll put the org-babel configuration here at the top until I have a section for org-mode.

#+BEGIN_SRC emacs-lisp
(setq org-src-fontify-natively t)
#+END_SRC

